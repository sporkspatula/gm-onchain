/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Gm, GmInterface } from "../Gm";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "baseFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rendererAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintsLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renderer",
    outputs: [
      {
        internalType: "contract GmRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "salePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "seed",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setSalePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620014943803806200149483398101604081905262000034916200021f565b8260405180604001604052806002815260200161676d60f01b81525060405180604001604052806002815260200161676d60f01b81525060405180608001604052806103e861ffff16815260200160405180602001604052806000815250815260200160405180602001604052806000815250815260200160001515815250620000c484620001a460201b60201c565b6000846001600160a01b031633858585604051602401620000e99493929190620002c1565b60408051601f198184030181529181526020820180516001600160e01b031663b1a78e3f60e01b1790525162000120919062000360565b600060405180830381855af49150503d80600081146200015d576040519150601f19603f3d011682016040523d82523d6000602084013e62000162565b606091505b50509050806200017157600080fd5b5050620186a280546001600160a01b0319166001600160a01b0396909616959095179094555050608052506200037e9050565b80620001de7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b620001ff60201b620007a71760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b90565b80516001600160a01b03811681146200021a57600080fd5b919050565b6000806000606084860312156200023557600080fd5b620002408462000202565b9250620002506020850162000202565b9150604084015190509250925092565b60005b838110156200027d57818101518382015260200162000263565b838111156200028d576000848401525b50505050565b60008151808452620002ad81602086016020860162000260565b601f01601f19169290920160200192915050565b6001600160a01b0385168152608060208201819052600090620002e79083018662000293565b8281036040840152620002fb818662000293565b9050828103606084015261ffff845116815260208401516080602083015262000328608083018262000293565b90506040850151828203604084015262000343828262000293565b915050606085015115156060830152809250505095945050505050565b600082516200037481846020870162000260565b9190910192915050565b6080516110ec620003a86000396000818161020e01528181610473015261049e01526110ec6000f3fe6080604052600436106100a05760003560e01c80639556483711610064578063955648371461016a5780639d5561e1146101a7578063a0712d68146101bc578063c87b56dd146101cf578063d5abeb01146101fc578063f51f96dd14610230576100aa565b80631919fed7146100c15780633ccfd60b146100e157806342966c68146100f65780635c60da1b146101165780638ada6b0f14610148576100aa565b366100aa57600080fd5b3480156100b657600080fd5b506100bf610248565b005b3480156100cd57600080fd5b506100bf6100dc366004610c16565b61027d565b3480156100ed57600080fd5b506100bf61032e565b34801561010257600080fd5b506100bf610111366004610c16565b6103e2565b34801561012257600080fd5b5061012b610432565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015457600080fd5b50620186a25461012b906001600160a01b031681565b34801561017657600080fd5b50610199610185366004610c16565b6000908152620186a3602052604090205490565b60405190815260200161013f565b3480156101b357600080fd5b50610199610460565b6100bf6101ca366004610c16565b61049c565b3480156101db57600080fd5b506101ef6101ea366004610c16565b6106a4565b60405161013f9190610c5f565b34801561020857600080fd5b506101997f000000000000000000000000000000000000000000000000000000000000000081565b34801561023c57600080fd5b50610199620186a15481565b6000610252610432565b90503660008037600080366000845af43d6000803e808015610273573d6000f35b3d6000fd5b505050565b306001600160a01b03166313effa0f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102b657600080fd5b505afa1580156102ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ee9190610c92565b6001600160a01b0316336001600160a01b0316146103275760405162461bcd60e51b815260040161031e90610cbb565b60405180910390fd5b620186a155565b306001600160a01b03166313effa0f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561036757600080fd5b505afa15801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f9190610c92565b6001600160a01b0316336001600160a01b0316146103cf5760405162461bcd60e51b815260040161031e90610cbb565b6103e06103da6107aa565b4761081d565b565b6103ec3382610936565b6104265760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b604482015260640161031e565b61042f816109c2565b50565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b600061046d620186a05490565b610497907f0000000000000000000000000000000000000000000000000000000000000000610cf4565b905090565b7f0000000000000000000000000000000000000000000000000000000000000000816104c9620186a05490565b6104d39190610d0b565b11156105185760405162461bcd60e51b815260206004820152601460248201527319db4b081b5a5b9d081a5cc81cdbdb19081bdd5d60621b604482015260640161031e565b620186a15461055c5760405162461bcd60e51b815260206004820152601060248201526f14d85b19481b9bdd081cdd185c9d195960821b604482015260640161031e565b600a8111156105965760405162461bcd60e51b81526020600482015260066024820152650626040dac2f60d31b604482015260640161031e565b80620186a1546105a69190610d23565b34146105e75760405162461bcd60e51b815260206004820152601060248201526f57726f6e672073616c6520707269636560801b604482015260640161031e565b60005b818110156106a057610648610600620186a05490565b60408051426020808301919091523360601b6bffffffffffffffffffffffff191682840152605480830194909452825180830390940184526074909101909152815191012090565b620186a36000610659620186a05490565b815260208101919091526040016000205561067e33610679620186a05490565b610a16565b61068e620186a080546001019055565b8061069881610d42565b9150506105ea565b5050565b620186a2546000828152620186a360205260408082205490516326ad102d60e21b815260048101859052602481019190915260609283929182916001600160a01b031690639ab440b49060440160006040518083038186803b15801561070957600080fd5b505afa15801561071d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107459190810190610dfb565b9150915061077b61075583610a7f565b82604051602001610767929190610e5f565b604051602081830303815290604052610ab0565b92508260405160200161078e9190610fa8565b6040516020818303038152906040529350505050919050565b90565b6000306001600160a01b03166313effa0f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107e557600080fd5b505afa1580156107f9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104979190610c92565b8047101561086d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161031e565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146108ba576040519150601f19603f3d011682016040523d82523d6000602084013e6108bf565b606091505b50509050806102785760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161031e565b60003060405163296cf3bd60e11b81526001600160a01b0385811660048301526024820185905291909116906352d9e77a9060440160206040518083038186803b15801561098357600080fd5b505afa158015610997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bb9190610fed565b9392505050565b60405163068d00a960e51b815260048101829052309063d1a0152090602401600060405180830381600087803b1580156109fb57600080fd5b505af1158015610a0f573d6000803e3d6000fd5b5050505050565b30604051633dc8ded760e01b81526001600160a01b038481166004830152602482018490529190911690633dc8ded790604401600060405180830381600087803b158015610a6357600080fd5b505af1158015610a77573d6000803e3d6000fd5b505050505050565b6060610a8a82610ab0565b604051602001610a9a919061100f565b6040516020818303038152906040529050919050565b6060815160001415610ad057505060408051602081019091526000815290565b60006040518060600160405280604081526020016110776040913990506000600384516002610aff9190610d0b565b610b099190611054565b610b14906004610d23565b90506000610b23826020610d0b565b67ffffffffffffffff811115610b3b57610b3b610d5d565b6040519080825280601f01601f191660200182016040528015610b65576020820181803683370190505b509050818152600183018586518101602084015b81831015610bd1576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610b79565b600389510660018114610beb5760028114610bfc57610c08565b613d3d60f01b600119830152610c08565b603d60f81b6000198301525b509398975050505050505050565b600060208284031215610c2857600080fd5b5035919050565b60005b83811015610c4a578181015183820152602001610c32565b83811115610c59576000848401525b50505050565b6020815260008251806020840152610c7e816040850160208701610c2f565b601f01601f19169190910160400192915050565b600060208284031215610ca457600080fd5b81516001600160a01b03811681146109bb57600080fd5b6020808252600990820152682737ba1037bbb732b960b91b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015610d0657610d06610cde565b500390565b60008219821115610d1e57610d1e610cde565b500190565b6000816000190483118215151615610d3d57610d3d610cde565b500290565b6000600019821415610d5657610d56610cde565b5060010190565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610d8457600080fd5b815167ffffffffffffffff80821115610d9f57610d9f610d5d565b604051601f8301601f19908116603f01168101908282118183101715610dc757610dc7610d5d565b81604052838152866020858801011115610de057600080fd5b610df1846020830160208901610c2f565b9695505050505050565b60008060408385031215610e0e57600080fd5b825167ffffffffffffffff80821115610e2657600080fd5b610e3286838701610d73565b93506020850151915080821115610e4857600080fd5b50610e5585828601610d73565b9150509250929050565b7f7b226465736372697074696f6e223a2022676d2d6f6e636861696e206973206181527f20636f6c6c656374696f6e206f662031302c3030302072616e646f6d6c79206760208201527f656e6572617465642c206f6e636861696e2061736369692d6172742072656e6460408201527f6974696f6e73206f66206f7572206661766f726974652063727970746f20706860608201526d1c985cd94b88195b9a9bde4b888b60921b6080820152691134b6b0b3b2911d101160b11b608e82015260008351610f33816098850160208801610c2f565b71222c202261747472696275746573223a205b60701b6098918401918201527f7b2274726169745f74797065223a227374796c65222c2276616c7565223a220060aa8201528351610f8b8160c9840160208801610c2f565b63227d5d7d60e01b60c9929091019182015260cd01949350505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251610fe081601d850160208701610c2f565b91909101601d0192915050565b600060208284031215610fff57600080fd5b815180151581146109bb57600080fd5b7f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000081526000825161104781601a850160208701610c2f565b91909101601a0192915050565b60008261107157634e487b7160e01b600052601260045260246000fd5b50049056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220ed9a78089ebc19c67281adc0500cfe55c27b10dda207841e4d053a2803c483bb64736f6c63430008090033";

export class Gm__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    baseFactory: string,
    _rendererAddress: string,
    _maxSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Gm> {
    return super.deploy(
      baseFactory,
      _rendererAddress,
      _maxSupply,
      overrides || {}
    ) as Promise<Gm>;
  }
  getDeployTransaction(
    baseFactory: string,
    _rendererAddress: string,
    _maxSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      baseFactory,
      _rendererAddress,
      _maxSupply,
      overrides || {}
    );
  }
  attach(address: string): Gm {
    return super.attach(address) as Gm;
  }
  connect(signer: Signer): Gm__factory {
    return super.connect(signer) as Gm__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GmInterface {
    return new utils.Interface(_abi) as GmInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Gm {
    return new Contract(address, _abi, signerOrProvider) as Gm;
  }
}
