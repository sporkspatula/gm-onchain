/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestBase, TestBaseInterface } from "../TestBase";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "__burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "__exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "__isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "__isApprovedOrOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "__mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "__owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uriBase",
        type: "string",
      },
      {
        internalType: "string",
        name: "uriExtension",
        type: "string",
      },
    ],
    name: "__setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "__tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "advancedConfig",
    outputs: [
      {
        internalType: "uint16",
        name: "royaltyBps",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "uriBase",
        type: "string",
      },
      {
        internalType: "string",
        name: "uriExtension",
        type: "string",
      },
      {
        internalType: "bool",
        name: "hasTransferHook",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deployedBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "royaltyBps",
            type: "uint16",
          },
          {
            internalType: "string",
            name: "uriBase",
            type: "string",
          },
          {
            internalType: "string",
            name: "uriExtension",
            type: "string",
          },
          {
            internalType: "bool",
            name: "hasTransferHook",
            type: "bool",
          },
        ],
        internalType: "struct ConfigSettings",
        name: "settings",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5043608052608051612327610030600039600061032401526123276000f3fe608060405234801561001057600080fd5b506004361061019a5760003560e01c806370a08231116100e4578063a22cb46511610092578063a22cb46514610381578063b1a78e3f14610394578063b88d4fde146103a7578063c87b56dd146103ba578063d1a01520146103cd578063e985e9c5146103e0578063f2fde38b146103f3578063f5dbba9d1461040657600080fd5b806370a0823114610304578063715018a61461031757806382ea7bfe1461031f5780638553c3e9146103465780638da5cb5b1461035957806395d89b4114610361578063a1f1fdb91461036957600080fd5b806318160ddd1161014c57806318160ddd1461024a57806323b872dd146102605780632a55205a146102735780633dc8ded7146102a557806342842e0e146102b857806342966c68146102cb57806352d9e77a146102de5780636352211e146102f157600080fd5b806301278b021461019f57806301ffc9a7146101b457806306fdde03146101dc578063081812fc146101f1578063087ff6181461021c578063095ea7b31461022f57806313effa0f14610242575b600080fd5b6101b26101ad366004611b1c565b610419565b005b6101c76101c2366004611b96565b61046d565b60405190151581526020015b60405180910390f35b6101e46104b3565b6040516101d39190611c0b565b6102046101ff366004611c1e565b610545565b6040516001600160a01b0390911681526020016101d3565b6101c761022a366004611c4e565b6105cd565b6101b261023d366004611c81565b6105e0565b6102046106ec565b6102526106fb565b6040519081526020016101d3565b6101b261026e366004611cab565b610706565b610286610281366004611ce7565b610738565b604080516001600160a01b0390931683526020830191909152016101d3565b6101b26102b3366004611c81565b610799565b6101b26102c6366004611cab565b6107d4565b6101b26102d9366004611c1e565b6107ef565b6101c76102ec366004611c81565b610848565b6102046102ff366004611c1e565b610873565b610252610312366004611d09565b6108ea565b6101b2610971565b6102527f000000000000000000000000000000000000000000000000000000000000000081565b6101c7610354366004611c1e565b6109ac565b6102046109b7565b6101e46109cb565b6103716109da565b6040516101d39493929190611d24565b6101b261038f366004611d77565b610b0d565b6101b26103a2366004611da1565b610bce565b6101b26103b5366004611eb7565b610cc2565b6101e46103c8366004611c1e565b610cfa565b6101b26103db366004611c1e565b610d71565b6101c76103ee366004611c4e565b610d90565b6101b2610401366004611d09565b610dd5565b6101e4610414366004611c1e565b610e72565b3330146104415760405162461bcd60e51b815260040161043890611f33565b60405180910390fd5b81516104549060cb9060208501906119ae565b5080516104689060cc9060208401906119ae565b505050565b600063152a902d60e11b6001600160e01b03198316148061049e5750633523b4bb60e21b6001600160e01b03198316145b806104ad57506104ad82610ea1565b92915050565b6060606580546104c290611f5a565b80601f01602080910402602001604051908101604052809291908181526020018280546104ee90611f5a565b801561053b5780601f106105105761010080835404028352916020019161053b565b820191906000526020600020905b81548152906001019060200180831161051e57829003601f168201915b5050505050905090565b600061055082610ef1565b6105b15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610438565b506000908152606960205260409020546001600160a01b031690565b60006105d98383610d90565b9392505050565b60006105eb82610873565b9050806001600160a01b0316836001600160a01b031614156106595760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610438565b336001600160a01b038216148061067557506106758133610d90565b6106e25760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b6064820152608401610438565b6104688383610f0e565b60006106f66109b7565b905090565b60006106f660c95490565b610711335b82610f7c565b61072d5760405162461bcd60e51b815260040161043890611f95565b610468838383611046565b600080806107446109b7565b6001600160a01b031614156107665761075b6109b7565b600091509150610792565b61076e6109b7565b60ca54612710906107839061ffff1686611ffc565b61078d9190612031565b915091505b9250929050565b3330146107b85760405162461bcd60e51b815260040161043890611f33565b6107c282826111df565b6107d060c980546001019055565b5050565b61046883838360405180602001604052806000815250610cc2565b6107f83361070b565b6108325760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b6044820152606401610438565b61083b8161130c565b61084560c96113a1565b50565b60003330146108695760405162461bcd60e51b815260040161043890611f33565b6105d98383610f7c565b6000818152606760205260408120546001600160a01b0316806104ad5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610438565b60006001600160a01b0382166109555760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610438565b506001600160a01b031660009081526068602052604090205490565b3361097a6109b7565b6001600160a01b0316146109a05760405162461bcd60e51b815260040161043890612045565b6109aa60006113f8565b565b60006104ad82610ef1565b60006106f66097546001600160a01b031690565b6060606680546104c290611f5a565b60ca805460cb805461ffff90921692916109f390611f5a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1f90611f5a565b8015610a6c5780601f10610a4157610100808354040283529160200191610a6c565b820191906000526020600020905b815481529060010190602001808311610a4f57829003601f168201915b505050505090806002018054610a8190611f5a565b80601f0160208091040260200160405190810160405280929190818152602001828054610aad90611f5a565b8015610afa5780601f10610acf57610100808354040283529160200191610afa565b820191906000526020600020905b815481529060010190602001808311610add57829003601f168201915b5050506003909301549192505060ff1684565b6001600160a01b038216331415610b625760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610438565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600054610100900460ff1680610be7575060005460ff16155b610c035760405162461bcd60e51b81526004016104389061207a565b600054610100900460ff16158015610c25576000805461ffff19166101011790555b610c2f848461144a565b610c376114d1565b815160ca805461ffff191661ffff9092169190911781556020808401518051859392610c689260cb929101906119ae565b5060408201518051610c849160028401916020909101906119ae565b50606091909101516003909101805460ff1916911515919091179055610ca985610dd5565b8015610cbb576000805461ff00191690555b5050505050565b610ccc3383610f7c565b610ce85760405162461bcd60e51b815260040161043890611f95565b610cf48484848461154c565b50505050565b6060610d0582610ef1565b610d3c5760405162461bcd60e51b81526020600482015260086024820152672737903a37b5b2b760c11b6044820152606401610438565b60cb610d478361157f565b604051610d5b92919060cc90602001612162565b6040516020818303038152906040529050919050565b3330146108325760405162461bcd60e51b815260040161043890611f33565b6001600160a01b038083166000908152606a6020908152604080832093851683529290529081205460ff16806105d957506001600160a01b0382163014905092915050565b33610dde6109b7565b6001600160a01b031614610e045760405162461bcd60e51b815260040161043890612045565b6001600160a01b038116610e695760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610438565b610845816113f8565b6060333014610e935760405162461bcd60e51b815260040161043890611f33565b6104ad82610cfa565b919050565b60006001600160e01b031982166380ac58cd60e01b1480610ed257506001600160e01b03198216635b5e139f60e01b145b806104ad57506301ffc9a760e01b6001600160e01b03198316146104ad565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610f4382610873565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610f8782610ef1565b610fe85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610438565b6000610ff383610873565b9050806001600160a01b0316846001600160a01b0316148061102e5750836001600160a01b031661102384610545565b6001600160a01b0316145b8061103e575061103e8185610d90565b949350505050565b826001600160a01b031661105982610873565b6001600160a01b0316146110c15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610438565b6001600160a01b0382166111235760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610438565b61112e83838361167d565b611139600082610f0e565b6001600160a01b0383166000908152606860205260408120805460019290611162908490612195565b90915550506001600160a01b03821660009081526068602052604081208054600192906111909084906121ac565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716916000805160206122d283398151915291a4505050565b6001600160a01b0382166112355760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610438565b61123e81610ef1565b1561128b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610438565b6112976000838361167d565b6001600160a01b03821660009081526068602052604081208054600192906112c09084906121ac565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392906000805160206122d2833981519152908290a45050565b600061131782610873565b90506113258160008461167d565b611330600083610f0e565b6001600160a01b0381166000908152606860205260408120805460019290611359908490612195565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416906000805160206122d2833981519152908390a45050565b8054806113f05760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f7700000000006044820152606401610438565b600019019055565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680611463575060005460ff16155b61147f5760405162461bcd60e51b81526004016104389061207a565b600054610100900460ff161580156114a1576000805461ffff19166101011790555b6114a9611742565b6114b1611742565b6114bb83836117ac565b8015610468576000805461ff0019169055505050565b600054610100900460ff16806114ea575060005460ff16155b6115065760405162461bcd60e51b81526004016104389061207a565b600054610100900460ff16158015611528576000805461ffff19166101011790555b611530611742565b611538611841565b8015610845576000805461ff001916905550565b611557848484611046565b611563848484846118a1565b610cf45760405162461bcd60e51b8152600401610438906121c4565b6060816115a35750506040805180820190915260018152600360fc1b602082015290565b8160005b81156115cd57806115b781612216565b91506115c69050600a83612031565b91506115a7565b60008167ffffffffffffffff8111156115e8576115e8611a47565b6040519080825280601f01601f191660200182016040528015611612576020820181803683370190505b5090505b841561103e57611627600183612195565b9150611634600a86612231565b61163f9060306121ac565b60f81b81838151811061165457611654612245565b60200101906001600160f81b031916908160001a905350611676600a86612031565b9450611616565b60cd5460ff1615610468576040516001600160a01b0384811660248301528316604482015260648101829052600090309060840160408051601f198184030181529181526020820180516001600160e01b031663cad3be8360e01b179052516116e6919061225b565b600060405180830381855af49150503d8060008114611721576040519150601f19603f3d011682016040523d82523d6000602084013e611726565b606091505b50509050806000811461173857610cbb565b3d6000803e3d6000fd5b600054610100900460ff168061175b575060005460ff16155b6117775760405162461bcd60e51b81526004016104389061207a565b600054610100900460ff16158015611538576000805461ffff19166101011790558015610845576000805461ff001916905550565b600054610100900460ff16806117c5575060005460ff16155b6117e15760405162461bcd60e51b81526004016104389061207a565b600054610100900460ff16158015611803576000805461ffff19166101011790555b82516118169060659060208601906119ae565b50815161182a9060669060208501906119ae565b508015610468576000805461ff0019169055505050565b600054610100900460ff168061185a575060005460ff16155b6118765760405162461bcd60e51b81526004016104389061207a565b600054610100900460ff16158015611898576000805461ffff19166101011790555b611538336113f8565b60006001600160a01b0384163b156119a357604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906118e5903390899088908890600401612277565b602060405180830381600087803b1580156118ff57600080fd5b505af192505050801561192f575060408051601f3d908101601f1916820190925261192c918101906122b4565b60015b611989573d80801561195d576040519150601f19603f3d011682016040523d82523d6000602084013e611962565b606091505b5080516119815760405162461bcd60e51b8152600401610438906121c4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061103e565b506001949350505050565b8280546119ba90611f5a565b90600052602060002090601f0160209004810192826119dc5760008555611a22565b82601f106119f557805160ff1916838001178555611a22565b82800160010185558215611a22579182015b82811115611a22578251825591602001919060010190611a07565b50611a2e929150611a32565b5090565b5b80821115611a2e5760008155600101611a33565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715611a8057611a80611a47565b60405290565b600067ffffffffffffffff80841115611aa157611aa1611a47565b604051601f8501601f19908116603f01168101908282118183101715611ac957611ac9611a47565b81604052809350858152868686011115611ae257600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611b0d57600080fd5b6105d983833560208501611a86565b60008060408385031215611b2f57600080fd5b823567ffffffffffffffff80821115611b4757600080fd5b611b5386838701611afc565b93506020850135915080821115611b6957600080fd5b50611b7685828601611afc565b9150509250929050565b6001600160e01b03198116811461084557600080fd5b600060208284031215611ba857600080fd5b81356105d981611b80565b60005b83811015611bce578181015183820152602001611bb6565b83811115610cf45750506000910152565b60008151808452611bf7816020860160208601611bb3565b601f01601f19169290920160200192915050565b6020815260006105d96020830184611bdf565b600060208284031215611c3057600080fd5b5035919050565b80356001600160a01b0381168114610e9c57600080fd5b60008060408385031215611c6157600080fd5b611c6a83611c37565b9150611c7860208401611c37565b90509250929050565b60008060408385031215611c9457600080fd5b611c9d83611c37565b946020939093013593505050565b600080600060608486031215611cc057600080fd5b611cc984611c37565b9250611cd760208501611c37565b9150604084013590509250925092565b60008060408385031215611cfa57600080fd5b50508035926020909101359150565b600060208284031215611d1b57600080fd5b6105d982611c37565b61ffff85168152608060208201526000611d416080830186611bdf565b8281036040840152611d538186611bdf565b915050821515606083015295945050505050565b80358015158114610e9c57600080fd5b60008060408385031215611d8a57600080fd5b611d9383611c37565b9150611c7860208401611d67565b60008060008060808587031215611db757600080fd5b611dc085611c37565b9350602085013567ffffffffffffffff80821115611ddd57600080fd5b611de988838901611afc565b94506040870135915080821115611dff57600080fd5b611e0b88838901611afc565b93506060870135915080821115611e2157600080fd5b9086019060808289031215611e3557600080fd5b611e3d611a5d565b823561ffff81168114611e4f57600080fd5b8152602083013582811115611e6357600080fd5b611e6f8a828601611afc565b602083015250604083013582811115611e8757600080fd5b611e938a828601611afc565b604083015250611ea560608401611d67565b60608201529598949750929550505050565b60008060008060808587031215611ecd57600080fd5b611ed685611c37565b9350611ee460208601611c37565b925060408501359150606085013567ffffffffffffffff811115611f0757600080fd5b8501601f81018713611f1857600080fd5b611f2787823560208401611a86565b91505092959194509250565b6020808252600d908201526c13db9b1e481a5b9d195c9b985b609a1b604082015260600190565b600181811c90821680611f6e57607f821691505b60208210811415611f8f57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561201657612016611fe6565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826120405761204061201b565b500490565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b8054600090600181811c90808316806120e257607f831692505b602080841082141561210457634e487b7160e01b600052602260045260246000fd5b818015612118576001811461212957612156565b60ff19861689528489019650612156565b60008881526020902060005b8681101561214e5781548b820152908501908301612135565b505084890196505b50505050505092915050565b600061216e82866120c8565b845161217e818360208901611bb3565b61218a818301866120c8565b979650505050505050565b6000828210156121a7576121a7611fe6565b500390565b600082198211156121bf576121bf611fe6565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060001982141561222a5761222a611fe6565b5060010190565b6000826122405761224061201b565b500690565b634e487b7160e01b600052603260045260246000fd5b6000825161226d818460208701611bb3565b9190910192915050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906122aa90830184611bdf565b9695505050505050565b6000602082840312156122c657600080fd5b81516105d981611b8056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122031ce26d4fcedcbdc2685642d9a4ca1fd375e5a0c27373692eb4cacba2787864864736f6c63430008090033";

export class TestBase__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestBase> {
    return super.deploy(overrides || {}) as Promise<TestBase>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestBase {
    return super.attach(address) as TestBase;
  }
  connect(signer: Signer): TestBase__factory {
    return super.connect(signer) as TestBase__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestBaseInterface {
    return new utils.Interface(_abi) as TestBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestBase {
    return new Contract(address, _abi, signerOrProvider) as TestBase;
  }
}
